paths:
  /api/v1/users:
    get:
      summary: Returns all users in data base.
      tags:
        - Users
      responses:
        "200":
          description: Successfully returns all existing users in the data base.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Users"
        "500":
          description: Server side error.
          content:
            application/json:
              schema:
                $ref: "#components/UserServerError/getUsers"
    delete:
      summary: Deletes all users in data base that have been inactive for the last 48 hours.
      tags:
        - Users
      responses:
        "200":
          description:
          content:
            application/json:
              schema:
        "500":
          description: Server side error.
          content:
            application/json:
              schema:
                $ref: "#components/UserServerError/deleteUsers"
components:
  schemas:
    Users:
      type: object
      description: User schema.
      properties:
        _id:
          type: ObjectId
          description: Id generated by mongo.
        name:
          type: string
          description: User's first name and last name.
        email:
          type: string
          description: User's email address.
        role:
          type: string
          description: User's role.
      example:
        message: Users in data base - 
        users:
          - _id: 651c93389a348738a43a73b6
            name: Jose Herrera
            email: jooherrera5@gmail.com,
            role: PREMIUM
          - _id: 651c15a1b7c3f377c52da645
            name: Prueba Nuevo
            email: prueba@hotmail.com,
            role: USER
  UserServerError:
    getUsers:
      type: object
      properties:
        status:
          type: integer
          description: Status code 500
        message:
          type: string
          description: Server side's error description.
      example:
        status: 500
        message: Server side error - in getUsers - user.controller.js.
    deleteUsers:
      type: object
      properties:
        status:
          type: integer
          description: Status code 500
        message:
          type: string
          description: Server side's error description.
      example:
        status: 500
        message: Server side error - in deleteUsers - user.controller.js.
  requestBodies:
